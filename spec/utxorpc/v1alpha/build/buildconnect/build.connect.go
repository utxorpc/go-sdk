/// A consistent view of the state of the ledger

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: utxorpc/v1alpha/build/build.proto

package buildconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	build "github.com/utxorpc/go-sdk/spec/utxorpc/v1alpha/build"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// LedgerStateServiceName is the fully-qualified name of the LedgerStateService service.
	LedgerStateServiceName = "utxorpc.v1.build.LedgerStateService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// LedgerStateServiceGetChainTipProcedure is the fully-qualified name of the LedgerStateService's
	// GetChainTip RPC.
	LedgerStateServiceGetChainTipProcedure = "/utxorpc.v1.build.LedgerStateService/GetChainTip"
	// LedgerStateServiceGetChainParamProcedure is the fully-qualified name of the LedgerStateService's
	// GetChainParam RPC.
	LedgerStateServiceGetChainParamProcedure = "/utxorpc.v1.build.LedgerStateService/GetChainParam"
	// LedgerStateServiceGetUtxoByAddressProcedure is the fully-qualified name of the
	// LedgerStateService's GetUtxoByAddress RPC.
	LedgerStateServiceGetUtxoByAddressProcedure = "/utxorpc.v1.build.LedgerStateService/GetUtxoByAddress"
	// LedgerStateServiceGetUtxoByRefProcedure is the fully-qualified name of the LedgerStateService's
	// GetUtxoByRef RPC.
	LedgerStateServiceGetUtxoByRefProcedure = "/utxorpc.v1.build.LedgerStateService/GetUtxoByRef"
	// LedgerStateServiceHoldUtxoProcedure is the fully-qualified name of the LedgerStateService's
	// HoldUtxo RPC.
	LedgerStateServiceHoldUtxoProcedure = "/utxorpc.v1.build.LedgerStateService/HoldUtxo"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	ledgerStateServiceServiceDescriptor                = build.File_utxorpc_v1alpha_build_build_proto.Services().ByName("LedgerStateService")
	ledgerStateServiceGetChainTipMethodDescriptor      = ledgerStateServiceServiceDescriptor.Methods().ByName("GetChainTip")
	ledgerStateServiceGetChainParamMethodDescriptor    = ledgerStateServiceServiceDescriptor.Methods().ByName("GetChainParam")
	ledgerStateServiceGetUtxoByAddressMethodDescriptor = ledgerStateServiceServiceDescriptor.Methods().ByName("GetUtxoByAddress")
	ledgerStateServiceGetUtxoByRefMethodDescriptor     = ledgerStateServiceServiceDescriptor.Methods().ByName("GetUtxoByRef")
	ledgerStateServiceHoldUtxoMethodDescriptor         = ledgerStateServiceServiceDescriptor.Methods().ByName("HoldUtxo")
)

// LedgerStateServiceClient is a client for the utxorpc.v1.build.LedgerStateService service.
type LedgerStateServiceClient interface {
	GetChainTip(context.Context, *connect.Request[build.GetChainTipRequest]) (*connect.Response[build.GetChainTipResponse], error)
	GetChainParam(context.Context, *connect.Request[build.GetChainParamRequest]) (*connect.Response[build.GetChainParamResponse], error)
	GetUtxoByAddress(context.Context, *connect.Request[build.GetUtxoByAddressRequest]) (*connect.Response[build.GetUtxoByAddressResponse], error)
	GetUtxoByRef(context.Context, *connect.Request[build.GetUtxoByRefRequest]) (*connect.Response[build.GetUtxoByRefResponse], error)
	HoldUtxo(context.Context, *connect.Request[build.HoldUtxoRequest]) (*connect.ServerStreamForClient[build.HoldUtxoResponse], error)
}

// NewLedgerStateServiceClient constructs a client for the utxorpc.v1.build.LedgerStateService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewLedgerStateServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) LedgerStateServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &ledgerStateServiceClient{
		getChainTip: connect.NewClient[build.GetChainTipRequest, build.GetChainTipResponse](
			httpClient,
			baseURL+LedgerStateServiceGetChainTipProcedure,
			connect.WithSchema(ledgerStateServiceGetChainTipMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getChainParam: connect.NewClient[build.GetChainParamRequest, build.GetChainParamResponse](
			httpClient,
			baseURL+LedgerStateServiceGetChainParamProcedure,
			connect.WithSchema(ledgerStateServiceGetChainParamMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getUtxoByAddress: connect.NewClient[build.GetUtxoByAddressRequest, build.GetUtxoByAddressResponse](
			httpClient,
			baseURL+LedgerStateServiceGetUtxoByAddressProcedure,
			connect.WithSchema(ledgerStateServiceGetUtxoByAddressMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		getUtxoByRef: connect.NewClient[build.GetUtxoByRefRequest, build.GetUtxoByRefResponse](
			httpClient,
			baseURL+LedgerStateServiceGetUtxoByRefProcedure,
			connect.WithSchema(ledgerStateServiceGetUtxoByRefMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		holdUtxo: connect.NewClient[build.HoldUtxoRequest, build.HoldUtxoResponse](
			httpClient,
			baseURL+LedgerStateServiceHoldUtxoProcedure,
			connect.WithSchema(ledgerStateServiceHoldUtxoMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// ledgerStateServiceClient implements LedgerStateServiceClient.
type ledgerStateServiceClient struct {
	getChainTip      *connect.Client[build.GetChainTipRequest, build.GetChainTipResponse]
	getChainParam    *connect.Client[build.GetChainParamRequest, build.GetChainParamResponse]
	getUtxoByAddress *connect.Client[build.GetUtxoByAddressRequest, build.GetUtxoByAddressResponse]
	getUtxoByRef     *connect.Client[build.GetUtxoByRefRequest, build.GetUtxoByRefResponse]
	holdUtxo         *connect.Client[build.HoldUtxoRequest, build.HoldUtxoResponse]
}

// GetChainTip calls utxorpc.v1.build.LedgerStateService.GetChainTip.
func (c *ledgerStateServiceClient) GetChainTip(ctx context.Context, req *connect.Request[build.GetChainTipRequest]) (*connect.Response[build.GetChainTipResponse], error) {
	return c.getChainTip.CallUnary(ctx, req)
}

// GetChainParam calls utxorpc.v1.build.LedgerStateService.GetChainParam.
func (c *ledgerStateServiceClient) GetChainParam(ctx context.Context, req *connect.Request[build.GetChainParamRequest]) (*connect.Response[build.GetChainParamResponse], error) {
	return c.getChainParam.CallUnary(ctx, req)
}

// GetUtxoByAddress calls utxorpc.v1.build.LedgerStateService.GetUtxoByAddress.
func (c *ledgerStateServiceClient) GetUtxoByAddress(ctx context.Context, req *connect.Request[build.GetUtxoByAddressRequest]) (*connect.Response[build.GetUtxoByAddressResponse], error) {
	return c.getUtxoByAddress.CallUnary(ctx, req)
}

// GetUtxoByRef calls utxorpc.v1.build.LedgerStateService.GetUtxoByRef.
func (c *ledgerStateServiceClient) GetUtxoByRef(ctx context.Context, req *connect.Request[build.GetUtxoByRefRequest]) (*connect.Response[build.GetUtxoByRefResponse], error) {
	return c.getUtxoByRef.CallUnary(ctx, req)
}

// HoldUtxo calls utxorpc.v1.build.LedgerStateService.HoldUtxo.
func (c *ledgerStateServiceClient) HoldUtxo(ctx context.Context, req *connect.Request[build.HoldUtxoRequest]) (*connect.ServerStreamForClient[build.HoldUtxoResponse], error) {
	return c.holdUtxo.CallServerStream(ctx, req)
}

// LedgerStateServiceHandler is an implementation of the utxorpc.v1.build.LedgerStateService
// service.
type LedgerStateServiceHandler interface {
	GetChainTip(context.Context, *connect.Request[build.GetChainTipRequest]) (*connect.Response[build.GetChainTipResponse], error)
	GetChainParam(context.Context, *connect.Request[build.GetChainParamRequest]) (*connect.Response[build.GetChainParamResponse], error)
	GetUtxoByAddress(context.Context, *connect.Request[build.GetUtxoByAddressRequest]) (*connect.Response[build.GetUtxoByAddressResponse], error)
	GetUtxoByRef(context.Context, *connect.Request[build.GetUtxoByRefRequest]) (*connect.Response[build.GetUtxoByRefResponse], error)
	HoldUtxo(context.Context, *connect.Request[build.HoldUtxoRequest], *connect.ServerStream[build.HoldUtxoResponse]) error
}

// NewLedgerStateServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewLedgerStateServiceHandler(svc LedgerStateServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	ledgerStateServiceGetChainTipHandler := connect.NewUnaryHandler(
		LedgerStateServiceGetChainTipProcedure,
		svc.GetChainTip,
		connect.WithSchema(ledgerStateServiceGetChainTipMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	ledgerStateServiceGetChainParamHandler := connect.NewUnaryHandler(
		LedgerStateServiceGetChainParamProcedure,
		svc.GetChainParam,
		connect.WithSchema(ledgerStateServiceGetChainParamMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	ledgerStateServiceGetUtxoByAddressHandler := connect.NewUnaryHandler(
		LedgerStateServiceGetUtxoByAddressProcedure,
		svc.GetUtxoByAddress,
		connect.WithSchema(ledgerStateServiceGetUtxoByAddressMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	ledgerStateServiceGetUtxoByRefHandler := connect.NewUnaryHandler(
		LedgerStateServiceGetUtxoByRefProcedure,
		svc.GetUtxoByRef,
		connect.WithSchema(ledgerStateServiceGetUtxoByRefMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	ledgerStateServiceHoldUtxoHandler := connect.NewServerStreamHandler(
		LedgerStateServiceHoldUtxoProcedure,
		svc.HoldUtxo,
		connect.WithSchema(ledgerStateServiceHoldUtxoMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/utxorpc.v1.build.LedgerStateService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case LedgerStateServiceGetChainTipProcedure:
			ledgerStateServiceGetChainTipHandler.ServeHTTP(w, r)
		case LedgerStateServiceGetChainParamProcedure:
			ledgerStateServiceGetChainParamHandler.ServeHTTP(w, r)
		case LedgerStateServiceGetUtxoByAddressProcedure:
			ledgerStateServiceGetUtxoByAddressHandler.ServeHTTP(w, r)
		case LedgerStateServiceGetUtxoByRefProcedure:
			ledgerStateServiceGetUtxoByRefHandler.ServeHTTP(w, r)
		case LedgerStateServiceHoldUtxoProcedure:
			ledgerStateServiceHoldUtxoHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedLedgerStateServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedLedgerStateServiceHandler struct{}

func (UnimplementedLedgerStateServiceHandler) GetChainTip(context.Context, *connect.Request[build.GetChainTipRequest]) (*connect.Response[build.GetChainTipResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("utxorpc.v1.build.LedgerStateService.GetChainTip is not implemented"))
}

func (UnimplementedLedgerStateServiceHandler) GetChainParam(context.Context, *connect.Request[build.GetChainParamRequest]) (*connect.Response[build.GetChainParamResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("utxorpc.v1.build.LedgerStateService.GetChainParam is not implemented"))
}

func (UnimplementedLedgerStateServiceHandler) GetUtxoByAddress(context.Context, *connect.Request[build.GetUtxoByAddressRequest]) (*connect.Response[build.GetUtxoByAddressResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("utxorpc.v1.build.LedgerStateService.GetUtxoByAddress is not implemented"))
}

func (UnimplementedLedgerStateServiceHandler) GetUtxoByRef(context.Context, *connect.Request[build.GetUtxoByRefRequest]) (*connect.Response[build.GetUtxoByRefResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("utxorpc.v1.build.LedgerStateService.GetUtxoByRef is not implemented"))
}

func (UnimplementedLedgerStateServiceHandler) HoldUtxo(context.Context, *connect.Request[build.HoldUtxoRequest], *connect.ServerStream[build.HoldUtxoResponse]) error {
	return connect.NewError(connect.CodeUnimplemented, errors.New("utxorpc.v1.build.LedgerStateService.HoldUtxo is not implemented"))
}
