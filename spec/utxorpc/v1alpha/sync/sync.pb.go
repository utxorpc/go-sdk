// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: utxorpc/v1alpha/sync/sync.proto

package sync

import (
	cardano "github.com/utxorpc/go-sdk/spec/utxorpc/v1alpha/cardano"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a reference to a specific block
type BlockRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"` // Height or slot number (depending on the blockchain)
	Hash  []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`    // Hash of the content of the block
}

func (x *BlockRef) Reset() {
	*x = BlockRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRef) ProtoMessage() {}

func (x *BlockRef) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRef.ProtoReflect.Descriptor instead.
func (*BlockRef) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_sync_sync_proto_rawDescGZIP(), []int{0}
}

func (x *BlockRef) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BlockRef) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type AnyChainBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Chain:
	//
	//	*AnyChainBlock_Raw
	//	*AnyChainBlock_Cardano
	Chain isAnyChainBlock_Chain `protobuf_oneof:"chain"`
}

func (x *AnyChainBlock) Reset() {
	*x = AnyChainBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyChainBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyChainBlock) ProtoMessage() {}

func (x *AnyChainBlock) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyChainBlock.ProtoReflect.Descriptor instead.
func (*AnyChainBlock) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_sync_sync_proto_rawDescGZIP(), []int{1}
}

func (m *AnyChainBlock) GetChain() isAnyChainBlock_Chain {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (x *AnyChainBlock) GetRaw() []byte {
	if x, ok := x.GetChain().(*AnyChainBlock_Raw); ok {
		return x.Raw
	}
	return nil
}

func (x *AnyChainBlock) GetCardano() *cardano.Block {
	if x, ok := x.GetChain().(*AnyChainBlock_Cardano); ok {
		return x.Cardano
	}
	return nil
}

type isAnyChainBlock_Chain interface {
	isAnyChainBlock_Chain()
}

type AnyChainBlock_Raw struct {
	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3,oneof"` // Original bytes for a raw block
}

type AnyChainBlock_Cardano struct {
	Cardano *cardano.Block `protobuf:"bytes,2,opt,name=cardano,proto3,oneof"` // A parsed Cardano block.
}

func (*AnyChainBlock_Raw) isAnyChainBlock_Chain() {}

func (*AnyChainBlock_Cardano) isAnyChainBlock_Chain() {}

// Request to fetch a block by its reference.
type FetchBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref       []*BlockRef            `protobuf:"bytes,1,rep,name=ref,proto3" json:"ref,omitempty"`                              // List of block references.
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"` // Field mask to selectively return fields.
}

func (x *FetchBlockRequest) Reset() {
	*x = FetchBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchBlockRequest) ProtoMessage() {}

func (x *FetchBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchBlockRequest.ProtoReflect.Descriptor instead.
func (*FetchBlockRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_sync_sync_proto_rawDescGZIP(), []int{2}
}

func (x *FetchBlockRequest) GetRef() []*BlockRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *FetchBlockRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Response containing the fetched blocks.
type FetchBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block []*AnyChainBlock `protobuf:"bytes,1,rep,name=block,proto3" json:"block,omitempty"` // List of fetched blocks.
}

func (x *FetchBlockResponse) Reset() {
	*x = FetchBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchBlockResponse) ProtoMessage() {}

func (x *FetchBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchBlockResponse.ProtoReflect.Descriptor instead.
func (*FetchBlockResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_sync_sync_proto_rawDescGZIP(), []int{3}
}

func (x *FetchBlockResponse) GetBlock() []*AnyChainBlock {
	if x != nil {
		return x.Block
	}
	return nil
}

// Request to dump the block history.
type DumpHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartToken *BlockRef              `protobuf:"bytes,2,opt,name=start_token,json=startToken,proto3" json:"start_token,omitempty"` // Starting point for the block history dump.
	MaxItems   uint32                 `protobuf:"varint,3,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`      // Maximum number of items to return.
	FieldMask  *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`    // Field mask to selectively return fields.
}

func (x *DumpHistoryRequest) Reset() {
	*x = DumpHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpHistoryRequest) ProtoMessage() {}

func (x *DumpHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpHistoryRequest.ProtoReflect.Descriptor instead.
func (*DumpHistoryRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_sync_sync_proto_rawDescGZIP(), []int{4}
}

func (x *DumpHistoryRequest) GetStartToken() *BlockRef {
	if x != nil {
		return x.StartToken
	}
	return nil
}

func (x *DumpHistoryRequest) GetMaxItems() uint32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *DumpHistoryRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Response containing the dumped block history.
type DumpHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block     []*AnyChainBlock `protobuf:"bytes,1,rep,name=block,proto3" json:"block,omitempty"`                          // List of blocks in the history.
	NextToken *BlockRef        `protobuf:"bytes,2,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"` // Next token for pagination.
}

func (x *DumpHistoryResponse) Reset() {
	*x = DumpHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpHistoryResponse) ProtoMessage() {}

func (x *DumpHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpHistoryResponse.ProtoReflect.Descriptor instead.
func (*DumpHistoryResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_sync_sync_proto_rawDescGZIP(), []int{5}
}

func (x *DumpHistoryResponse) GetBlock() []*AnyChainBlock {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *DumpHistoryResponse) GetNextToken() *BlockRef {
	if x != nil {
		return x.NextToken
	}
	return nil
}

// Request to follow the tip of the blockchain.
type FollowTipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intersect []*BlockRef `protobuf:"bytes,1,rep,name=intersect,proto3" json:"intersect,omitempty"` // List of block references to find the intersection.
}

func (x *FollowTipRequest) Reset() {
	*x = FollowTipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowTipRequest) ProtoMessage() {}

func (x *FollowTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowTipRequest.ProtoReflect.Descriptor instead.
func (*FollowTipRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_sync_sync_proto_rawDescGZIP(), []int{6}
}

func (x *FollowTipRequest) GetIntersect() []*BlockRef {
	if x != nil {
		return x.Intersect
	}
	return nil
}

// Response containing the action to perform while following the tip.
type FollowTipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*FollowTipResponse_Apply
	//	*FollowTipResponse_Undo
	//	*FollowTipResponse_Reset_
	Action isFollowTipResponse_Action `protobuf_oneof:"action"`
}

func (x *FollowTipResponse) Reset() {
	*x = FollowTipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowTipResponse) ProtoMessage() {}

func (x *FollowTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_sync_sync_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowTipResponse.ProtoReflect.Descriptor instead.
func (*FollowTipResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_sync_sync_proto_rawDescGZIP(), []int{7}
}

func (m *FollowTipResponse) GetAction() isFollowTipResponse_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *FollowTipResponse) GetApply() *AnyChainBlock {
	if x, ok := x.GetAction().(*FollowTipResponse_Apply); ok {
		return x.Apply
	}
	return nil
}

func (x *FollowTipResponse) GetUndo() *AnyChainBlock {
	if x, ok := x.GetAction().(*FollowTipResponse_Undo); ok {
		return x.Undo
	}
	return nil
}

func (x *FollowTipResponse) GetReset_() *BlockRef {
	if x, ok := x.GetAction().(*FollowTipResponse_Reset_); ok {
		return x.Reset_
	}
	return nil
}

type isFollowTipResponse_Action interface {
	isFollowTipResponse_Action()
}

type FollowTipResponse_Apply struct {
	Apply *AnyChainBlock `protobuf:"bytes,1,opt,name=apply,proto3,oneof"` // Apply this block.
}

type FollowTipResponse_Undo struct {
	Undo *AnyChainBlock `protobuf:"bytes,2,opt,name=undo,proto3,oneof"` // Undo this block.
}

type FollowTipResponse_Reset_ struct {
	Reset_ *BlockRef `protobuf:"bytes,3,opt,name=reset,proto3,oneof"` // Reset to this block reference.
}

func (*FollowTipResponse_Apply) isFollowTipResponse_Action() {}

func (*FollowTipResponse_Undo) isFollowTipResponse_Action() {}

func (*FollowTipResponse_Reset_) isFollowTipResponse_Action() {}

var File_utxorpc_v1alpha_sync_sync_proto protoreflect.FileDescriptor

var file_utxorpc_v1alpha_sync_sync_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x61,
	0x6e, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x34, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x68, 0x0a, 0x0d, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x3a, 0x0a, 0x07, 0x63,
	0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75,
	0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x22, 0x80, 0x01, 0x0a, 0x11, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x22, 0x4f, 0x0a, 0x12, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xad, 0x01, 0x0a, 0x12, 0x44, 0x75, 0x6d, 0x70, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x66,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x44, 0x75, 0x6d, 0x70, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x52, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x50, 0x0a, 0x10, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x54, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x52, 0x09, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x04, 0x75,
	0x6e, 0x64, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x74, 0x78, 0x6f,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00,
	0x52, 0x04, 0x75, 0x6e, 0x64, 0x6f, 0x12, 0x36, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xb7, 0x02, 0x0a, 0x10, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a,
	0x0a, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x27, 0x2e, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62,
	0x0a, 0x0b, 0x44, 0x75, 0x6d, 0x70, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x2e,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x44,
	0x75, 0x6d, 0x70, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x70, 0x12,
	0x26, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x42, 0xcc, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x42,
	0x09, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63,
	0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x75, 0x74, 0x78,
	0x6f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x73, 0x79, 0x6e,
	0x63, 0xa2, 0x02, 0x03, 0x55, 0x56, 0x53, 0xaa, 0x02, 0x14, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70,
	0x63, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0xca, 0x02,
	0x14, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x5c, 0x53, 0x79, 0x6e, 0x63, 0xe2, 0x02, 0x20, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x5c,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x53, 0x79, 0x6e, 0x63, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x55, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3a, 0x3a, 0x53, 0x79, 0x6e,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_utxorpc_v1alpha_sync_sync_proto_rawDescOnce sync.Once
	file_utxorpc_v1alpha_sync_sync_proto_rawDescData = file_utxorpc_v1alpha_sync_sync_proto_rawDesc
)

func file_utxorpc_v1alpha_sync_sync_proto_rawDescGZIP() []byte {
	file_utxorpc_v1alpha_sync_sync_proto_rawDescOnce.Do(func() {
		file_utxorpc_v1alpha_sync_sync_proto_rawDescData = protoimpl.X.CompressGZIP(file_utxorpc_v1alpha_sync_sync_proto_rawDescData)
	})
	return file_utxorpc_v1alpha_sync_sync_proto_rawDescData
}

var file_utxorpc_v1alpha_sync_sync_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_utxorpc_v1alpha_sync_sync_proto_goTypes = []interface{}{
	(*BlockRef)(nil),              // 0: utxorpc.v1alpha.sync.BlockRef
	(*AnyChainBlock)(nil),         // 1: utxorpc.v1alpha.sync.AnyChainBlock
	(*FetchBlockRequest)(nil),     // 2: utxorpc.v1alpha.sync.FetchBlockRequest
	(*FetchBlockResponse)(nil),    // 3: utxorpc.v1alpha.sync.FetchBlockResponse
	(*DumpHistoryRequest)(nil),    // 4: utxorpc.v1alpha.sync.DumpHistoryRequest
	(*DumpHistoryResponse)(nil),   // 5: utxorpc.v1alpha.sync.DumpHistoryResponse
	(*FollowTipRequest)(nil),      // 6: utxorpc.v1alpha.sync.FollowTipRequest
	(*FollowTipResponse)(nil),     // 7: utxorpc.v1alpha.sync.FollowTipResponse
	(*cardano.Block)(nil),         // 8: utxorpc.v1alpha.cardano.Block
	(*fieldmaskpb.FieldMask)(nil), // 9: google.protobuf.FieldMask
}
var file_utxorpc_v1alpha_sync_sync_proto_depIdxs = []int32{
	8,  // 0: utxorpc.v1alpha.sync.AnyChainBlock.cardano:type_name -> utxorpc.v1alpha.cardano.Block
	0,  // 1: utxorpc.v1alpha.sync.FetchBlockRequest.ref:type_name -> utxorpc.v1alpha.sync.BlockRef
	9,  // 2: utxorpc.v1alpha.sync.FetchBlockRequest.field_mask:type_name -> google.protobuf.FieldMask
	1,  // 3: utxorpc.v1alpha.sync.FetchBlockResponse.block:type_name -> utxorpc.v1alpha.sync.AnyChainBlock
	0,  // 4: utxorpc.v1alpha.sync.DumpHistoryRequest.start_token:type_name -> utxorpc.v1alpha.sync.BlockRef
	9,  // 5: utxorpc.v1alpha.sync.DumpHistoryRequest.field_mask:type_name -> google.protobuf.FieldMask
	1,  // 6: utxorpc.v1alpha.sync.DumpHistoryResponse.block:type_name -> utxorpc.v1alpha.sync.AnyChainBlock
	0,  // 7: utxorpc.v1alpha.sync.DumpHistoryResponse.next_token:type_name -> utxorpc.v1alpha.sync.BlockRef
	0,  // 8: utxorpc.v1alpha.sync.FollowTipRequest.intersect:type_name -> utxorpc.v1alpha.sync.BlockRef
	1,  // 9: utxorpc.v1alpha.sync.FollowTipResponse.apply:type_name -> utxorpc.v1alpha.sync.AnyChainBlock
	1,  // 10: utxorpc.v1alpha.sync.FollowTipResponse.undo:type_name -> utxorpc.v1alpha.sync.AnyChainBlock
	0,  // 11: utxorpc.v1alpha.sync.FollowTipResponse.reset:type_name -> utxorpc.v1alpha.sync.BlockRef
	2,  // 12: utxorpc.v1alpha.sync.ChainSyncService.FetchBlock:input_type -> utxorpc.v1alpha.sync.FetchBlockRequest
	4,  // 13: utxorpc.v1alpha.sync.ChainSyncService.DumpHistory:input_type -> utxorpc.v1alpha.sync.DumpHistoryRequest
	6,  // 14: utxorpc.v1alpha.sync.ChainSyncService.FollowTip:input_type -> utxorpc.v1alpha.sync.FollowTipRequest
	3,  // 15: utxorpc.v1alpha.sync.ChainSyncService.FetchBlock:output_type -> utxorpc.v1alpha.sync.FetchBlockResponse
	5,  // 16: utxorpc.v1alpha.sync.ChainSyncService.DumpHistory:output_type -> utxorpc.v1alpha.sync.DumpHistoryResponse
	7,  // 17: utxorpc.v1alpha.sync.ChainSyncService.FollowTip:output_type -> utxorpc.v1alpha.sync.FollowTipResponse
	15, // [15:18] is the sub-list for method output_type
	12, // [12:15] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_utxorpc_v1alpha_sync_sync_proto_init() }
func file_utxorpc_v1alpha_sync_sync_proto_init() {
	if File_utxorpc_v1alpha_sync_sync_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_utxorpc_v1alpha_sync_sync_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_sync_sync_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyChainBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_sync_sync_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_sync_sync_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_sync_sync_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_sync_sync_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_sync_sync_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowTipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_sync_sync_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowTipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_utxorpc_v1alpha_sync_sync_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AnyChainBlock_Raw)(nil),
		(*AnyChainBlock_Cardano)(nil),
	}
	file_utxorpc_v1alpha_sync_sync_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*FollowTipResponse_Apply)(nil),
		(*FollowTipResponse_Undo)(nil),
		(*FollowTipResponse_Reset_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_utxorpc_v1alpha_sync_sync_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_utxorpc_v1alpha_sync_sync_proto_goTypes,
		DependencyIndexes: file_utxorpc_v1alpha_sync_sync_proto_depIdxs,
		MessageInfos:      file_utxorpc_v1alpha_sync_sync_proto_msgTypes,
	}.Build()
	File_utxorpc_v1alpha_sync_sync_proto = out.File
	file_utxorpc_v1alpha_sync_sync_proto_rawDesc = nil
	file_utxorpc_v1alpha_sync_sync_proto_goTypes = nil
	file_utxorpc_v1alpha_sync_sync_proto_depIdxs = nil
}
