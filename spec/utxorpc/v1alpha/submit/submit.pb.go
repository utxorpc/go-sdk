// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: utxorpc/v1alpha/submit/submit.proto

package submit

import (
	cardano "github.com/utxorpc/go-sdk/spec/utxorpc/v1alpha/cardano"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum representing the various stages of a transaction's lifecycle.
type Stage int32

const (
	Stage_STAGE_UNSPECIFIED  Stage = 0 // Unspecified stage.
	Stage_STAGE_ACKNOWLEDGED Stage = 1 // Transaction has been acknowledged by the node.
	Stage_STAGE_MEMPOOL      Stage = 2 // Transaction is in the mempool.
	Stage_STAGE_NETWORK      Stage = 3 // Transaction has been propagated across the network.
	Stage_STAGE_CONFIRMED    Stage = 4 // Transaction has been confirmed on the blockchain.
)

// Enum value maps for Stage.
var (
	Stage_name = map[int32]string{
		0: "STAGE_UNSPECIFIED",
		1: "STAGE_ACKNOWLEDGED",
		2: "STAGE_MEMPOOL",
		3: "STAGE_NETWORK",
		4: "STAGE_CONFIRMED",
	}
	Stage_value = map[string]int32{
		"STAGE_UNSPECIFIED":  0,
		"STAGE_ACKNOWLEDGED": 1,
		"STAGE_MEMPOOL":      2,
		"STAGE_NETWORK":      3,
		"STAGE_CONFIRMED":    4,
	}
)

func (x Stage) Enum() *Stage {
	p := new(Stage)
	*p = x
	return p
}

func (x Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_utxorpc_v1alpha_submit_submit_proto_enumTypes[0].Descriptor()
}

func (Stage) Type() protoreflect.EnumType {
	return &file_utxorpc_v1alpha_submit_submit_proto_enumTypes[0]
}

func (x Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stage.Descriptor instead.
func (Stage) EnumDescriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{0}
}

// Represents a transaction from any supported blockchain.
type AnyChainTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*AnyChainTx_Raw
	Type isAnyChainTx_Type `protobuf_oneof:"type"`
}

func (x *AnyChainTx) Reset() {
	*x = AnyChainTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyChainTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyChainTx) ProtoMessage() {}

func (x *AnyChainTx) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyChainTx.ProtoReflect.Descriptor instead.
func (*AnyChainTx) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{0}
}

func (m *AnyChainTx) GetType() isAnyChainTx_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *AnyChainTx) GetRaw() []byte {
	if x, ok := x.GetType().(*AnyChainTx_Raw); ok {
		return x.Raw
	}
	return nil
}

type isAnyChainTx_Type interface {
	isAnyChainTx_Type()
}

type AnyChainTx_Raw struct {
	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3,oneof"` // Raw transaction data.
}

func (*AnyChainTx_Raw) isAnyChainTx_Type() {}

// Request to submit transactions to the blockchain.
type SubmitTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx []*AnyChainTx `protobuf:"bytes,1,rep,name=tx,proto3" json:"tx,omitempty"` // List of transactions to submit.
}

func (x *SubmitTxRequest) Reset() {
	*x = SubmitTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTxRequest) ProtoMessage() {}

func (x *SubmitTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTxRequest.ProtoReflect.Descriptor instead.
func (*SubmitTxRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitTxRequest) GetTx() []*AnyChainTx {
	if x != nil {
		return x.Tx
	}
	return nil
}

// Response containing references to the submitted transactions.
type SubmitTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref [][]byte `protobuf:"bytes,1,rep,name=ref,proto3" json:"ref,omitempty"` // List of transaction references.
}

func (x *SubmitTxResponse) Reset() {
	*x = SubmitTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTxResponse) ProtoMessage() {}

func (x *SubmitTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTxResponse.ProtoReflect.Descriptor instead.
func (*SubmitTxResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitTxResponse) GetRef() [][]byte {
	if x != nil {
		return x.Ref
	}
	return nil
}

type TxInMempool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx    *AnyChainTx `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`                                          // The contents of the tx
	Stage Stage       `protobuf:"varint,2,opt,name=stage,proto3,enum=utxorpc.v1alpha.submit.Stage" json:"stage,omitempty"` // The current stage of the tx
}

func (x *TxInMempool) Reset() {
	*x = TxInMempool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxInMempool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInMempool) ProtoMessage() {}

func (x *TxInMempool) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInMempool.ProtoReflect.Descriptor instead.
func (*TxInMempool) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{3}
}

func (x *TxInMempool) GetTx() *AnyChainTx {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TxInMempool) GetStage() Stage {
	if x != nil {
		return x.Stage
	}
	return Stage_STAGE_UNSPECIFIED
}

// Request to check the status of submitted transactions.
type ReadMempoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []*TxInMempool `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"` // List of transaction currently on the mempool.
}

func (x *ReadMempoolRequest) Reset() {
	*x = ReadMempoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMempoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMempoolRequest) ProtoMessage() {}

func (x *ReadMempoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMempoolRequest.ProtoReflect.Descriptor instead.
func (*ReadMempoolRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{4}
}

func (x *ReadMempoolRequest) GetTxs() []*TxInMempool {
	if x != nil {
		return x.Txs
	}
	return nil
}

// Response containing the stage of the submitted transactions.
type ReadMempoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage []Stage `protobuf:"varint,1,rep,packed,name=stage,proto3,enum=utxorpc.v1alpha.submit.Stage" json:"stage,omitempty"` // List of stages corresponding to the transaction references.
}

func (x *ReadMempoolResponse) Reset() {
	*x = ReadMempoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMempoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMempoolResponse) ProtoMessage() {}

func (x *ReadMempoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMempoolResponse.ProtoReflect.Descriptor instead.
func (*ReadMempoolResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{5}
}

func (x *ReadMempoolResponse) GetStage() []Stage {
	if x != nil {
		return x.Stage
	}
	return nil
}

// Request to wait for transactions to reach a certain stage.
type WaitForTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref [][]byte `protobuf:"bytes,1,rep,name=ref,proto3" json:"ref,omitempty"` // List of transaction references to wait for.
}

func (x *WaitForTxRequest) Reset() {
	*x = WaitForTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForTxRequest) ProtoMessage() {}

func (x *WaitForTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForTxRequest.ProtoReflect.Descriptor instead.
func (*WaitForTxRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{6}
}

func (x *WaitForTxRequest) GetRef() [][]byte {
	if x != nil {
		return x.Ref
	}
	return nil
}

// Response containing the transaction reference and stage once it has been reached.
type WaitForTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref   []byte `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`                                        // Transaction reference.
	Stage Stage  `protobuf:"varint,2,opt,name=stage,proto3,enum=utxorpc.v1alpha.submit.Stage" json:"stage,omitempty"` // Stage reached by the transaction.
}

func (x *WaitForTxResponse) Reset() {
	*x = WaitForTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForTxResponse) ProtoMessage() {}

func (x *WaitForTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForTxResponse.ProtoReflect.Descriptor instead.
func (*WaitForTxResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{7}
}

func (x *WaitForTxResponse) GetRef() []byte {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *WaitForTxResponse) GetStage() Stage {
	if x != nil {
		return x.Stage
	}
	return Stage_STAGE_UNSPECIFIED
}

// Represents a tx pattern from any supported blockchain.
type AnyChainTxPattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Chain:
	//
	//	*AnyChainTxPattern_Cardano
	Chain isAnyChainTxPattern_Chain `protobuf_oneof:"chain"`
}

func (x *AnyChainTxPattern) Reset() {
	*x = AnyChainTxPattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyChainTxPattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyChainTxPattern) ProtoMessage() {}

func (x *AnyChainTxPattern) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyChainTxPattern.ProtoReflect.Descriptor instead.
func (*AnyChainTxPattern) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{8}
}

func (m *AnyChainTxPattern) GetChain() isAnyChainTxPattern_Chain {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (x *AnyChainTxPattern) GetCardano() *cardano.TxPattern {
	if x, ok := x.GetChain().(*AnyChainTxPattern_Cardano); ok {
		return x.Cardano
	}
	return nil
}

type isAnyChainTxPattern_Chain interface {
	isAnyChainTxPattern_Chain()
}

type AnyChainTxPattern_Cardano struct {
	Cardano *cardano.TxPattern `protobuf:"bytes,1,opt,name=cardano,proto3,oneof"` // A Cardano tx pattern.
}

func (*AnyChainTxPattern_Cardano) isAnyChainTxPattern_Chain() {}

// Represents a simple tx predicate that can composed to create more complext ones
type TxPredicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match *AnyChainTxPattern `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`              // Predicate is true if tx exhibits pattern.
	Not   []*TxPredicate     `protobuf:"bytes,2,rep,name=not,proto3" json:"not,omitempty"`                  // Predicate is true if tx doesn't exhibit pattern.
	AllOf []*TxPredicate     `protobuf:"bytes,3,rep,name=all_of,json=allOf,proto3" json:"all_of,omitempty"` // Predicate is true if tx exhibits all of the patterns.
	AnyOf []*TxPredicate     `protobuf:"bytes,4,rep,name=any_of,json=anyOf,proto3" json:"any_of,omitempty"` // Predicate is true if tx exhibits any of the patterns.
}

func (x *TxPredicate) Reset() {
	*x = TxPredicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxPredicate) ProtoMessage() {}

func (x *TxPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxPredicate.ProtoReflect.Descriptor instead.
func (*TxPredicate) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{9}
}

func (x *TxPredicate) GetMatch() *AnyChainTxPattern {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *TxPredicate) GetNot() []*TxPredicate {
	if x != nil {
		return x.Not
	}
	return nil
}

func (x *TxPredicate) GetAllOf() []*TxPredicate {
	if x != nil {
		return x.AllOf
	}
	return nil
}

func (x *TxPredicate) GetAnyOf() []*TxPredicate {
	if x != nil {
		return x.AnyOf
	}
	return nil
}

// Request to watch changes of specific mempool txs.
type WatchMempoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Predicate *TxPredicate           `protobuf:"bytes,1,opt,name=predicate,proto3" json:"predicate,omitempty"`                  // A predicate to filter transactions by.
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"` // Field mask to selectively return fields.
}

func (x *WatchMempoolRequest) Reset() {
	*x = WatchMempoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchMempoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchMempoolRequest) ProtoMessage() {}

func (x *WatchMempoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchMempoolRequest.ProtoReflect.Descriptor instead.
func (*WatchMempoolRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{10}
}

func (x *WatchMempoolRequest) GetPredicate() *TxPredicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

func (x *WatchMempoolRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Response that represents a change in a mempool tx.
type WatchMempoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx *TxInMempool `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"` // The content and stage of the tx that has changed
}

func (x *WatchMempoolResponse) Reset() {
	*x = WatchMempoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchMempoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchMempoolResponse) ProtoMessage() {}

func (x *WatchMempoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_v1alpha_submit_submit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchMempoolResponse.ProtoReflect.Descriptor instead.
func (*WatchMempoolResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP(), []int{11}
}

func (x *WatchMempoolResponse) GetTx() *TxInMempool {
	if x != nil {
		return x.Tx
	}
	return nil
}

var File_utxorpc_v1alpha_submit_submit_proto protoreflect.FileDescriptor

var file_utxorpc_v1alpha_submit_submit_proto_rawDesc = []byte{
	0x0a, 0x23, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x25, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0a, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x78, 0x12, 0x12, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x03, 0x72, 0x61, 0x77, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x45, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x54, 0x78, 0x52, 0x02, 0x74, 0x78, 0x22, 0x24, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x76, 0x0a,
	0x0b, 0x54, 0x78, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x02,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x2e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x78, 0x52, 0x02, 0x74, 0x78,
	0x12, 0x33, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d,
	0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x03, 0x74,
	0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x03, 0x74,
	0x78, 0x73, 0x22, 0x4a, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0x24,
	0x0a, 0x10, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x03, 0x72, 0x65, 0x66, 0x22, 0x5a, 0x0a, 0x11, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x33, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x78,
	0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x22, 0x5c, 0x0a, 0x11, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x78, 0x50, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f,
	0x2e, 0x54, 0x78, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61,
	0x72, 0x64, 0x61, 0x6e, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0xfd,
	0x01, 0x0a, 0x0b, 0x54, 0x78, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x3f,
	0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54,
	0x78, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x35, 0x0a, 0x03, 0x6e, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75,
	0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x54, 0x78, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x03, 0x6e, 0x6f, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x66,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e,
	0x54, 0x78, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x05, 0x61, 0x6c, 0x6c,
	0x4f, 0x66, 0x12, 0x3a, 0x0a, 0x06, 0x61, 0x6e, 0x79, 0x5f, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x54, 0x78, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x05, 0x61, 0x6e, 0x79, 0x4f, 0x66, 0x22, 0x93,
	0x01, 0x0a, 0x13, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x74, 0x78, 0x6f,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x2e, 0x54, 0x78, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x09,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x22, 0x4b, 0x0a, 0x14, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d,
	0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x02,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x02, 0x74,
	0x78, 0x2a, 0x71, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x43, 0x4b, 0x4e, 0x4f,
	0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41,
	0x47, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x50, 0x4f, 0x4f, 0x4c, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d,
	0x45, 0x44, 0x10, 0x04, 0x32, 0xa7, 0x03, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x54, 0x78, 0x12, 0x27, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x54, 0x78, 0x12, 0x28, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x57, 0x61, 0x69, 0x74,
	0x46, 0x6f, 0x72, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x75,
	0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x54, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x66, 0x0a, 0x0b, 0x52, 0x65, 0x61,
	0x64, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x2a, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x0c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f,
	0x6c, 0x12, 0x2b, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d,
	0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0xda,
	0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x0b, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63,
	0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x75, 0x74, 0x78,
	0x6f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0xa2, 0x02, 0x03, 0x55, 0x56, 0x53, 0xaa, 0x02, 0x16, 0x55, 0x74, 0x78, 0x6f,
	0x72, 0x70, 0x63, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0xca, 0x02, 0x16, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x5c, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x5c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0xe2, 0x02, 0x22, 0x55, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x18, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x3a, 0x3a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_utxorpc_v1alpha_submit_submit_proto_rawDescOnce sync.Once
	file_utxorpc_v1alpha_submit_submit_proto_rawDescData = file_utxorpc_v1alpha_submit_submit_proto_rawDesc
)

func file_utxorpc_v1alpha_submit_submit_proto_rawDescGZIP() []byte {
	file_utxorpc_v1alpha_submit_submit_proto_rawDescOnce.Do(func() {
		file_utxorpc_v1alpha_submit_submit_proto_rawDescData = protoimpl.X.CompressGZIP(file_utxorpc_v1alpha_submit_submit_proto_rawDescData)
	})
	return file_utxorpc_v1alpha_submit_submit_proto_rawDescData
}

var file_utxorpc_v1alpha_submit_submit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_utxorpc_v1alpha_submit_submit_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_utxorpc_v1alpha_submit_submit_proto_goTypes = []interface{}{
	(Stage)(0),                    // 0: utxorpc.v1alpha.submit.Stage
	(*AnyChainTx)(nil),            // 1: utxorpc.v1alpha.submit.AnyChainTx
	(*SubmitTxRequest)(nil),       // 2: utxorpc.v1alpha.submit.SubmitTxRequest
	(*SubmitTxResponse)(nil),      // 3: utxorpc.v1alpha.submit.SubmitTxResponse
	(*TxInMempool)(nil),           // 4: utxorpc.v1alpha.submit.TxInMempool
	(*ReadMempoolRequest)(nil),    // 5: utxorpc.v1alpha.submit.ReadMempoolRequest
	(*ReadMempoolResponse)(nil),   // 6: utxorpc.v1alpha.submit.ReadMempoolResponse
	(*WaitForTxRequest)(nil),      // 7: utxorpc.v1alpha.submit.WaitForTxRequest
	(*WaitForTxResponse)(nil),     // 8: utxorpc.v1alpha.submit.WaitForTxResponse
	(*AnyChainTxPattern)(nil),     // 9: utxorpc.v1alpha.submit.AnyChainTxPattern
	(*TxPredicate)(nil),           // 10: utxorpc.v1alpha.submit.TxPredicate
	(*WatchMempoolRequest)(nil),   // 11: utxorpc.v1alpha.submit.WatchMempoolRequest
	(*WatchMempoolResponse)(nil),  // 12: utxorpc.v1alpha.submit.WatchMempoolResponse
	(*cardano.TxPattern)(nil),     // 13: utxorpc.v1alpha.cardano.TxPattern
	(*fieldmaskpb.FieldMask)(nil), // 14: google.protobuf.FieldMask
}
var file_utxorpc_v1alpha_submit_submit_proto_depIdxs = []int32{
	1,  // 0: utxorpc.v1alpha.submit.SubmitTxRequest.tx:type_name -> utxorpc.v1alpha.submit.AnyChainTx
	1,  // 1: utxorpc.v1alpha.submit.TxInMempool.tx:type_name -> utxorpc.v1alpha.submit.AnyChainTx
	0,  // 2: utxorpc.v1alpha.submit.TxInMempool.stage:type_name -> utxorpc.v1alpha.submit.Stage
	4,  // 3: utxorpc.v1alpha.submit.ReadMempoolRequest.txs:type_name -> utxorpc.v1alpha.submit.TxInMempool
	0,  // 4: utxorpc.v1alpha.submit.ReadMempoolResponse.stage:type_name -> utxorpc.v1alpha.submit.Stage
	0,  // 5: utxorpc.v1alpha.submit.WaitForTxResponse.stage:type_name -> utxorpc.v1alpha.submit.Stage
	13, // 6: utxorpc.v1alpha.submit.AnyChainTxPattern.cardano:type_name -> utxorpc.v1alpha.cardano.TxPattern
	9,  // 7: utxorpc.v1alpha.submit.TxPredicate.match:type_name -> utxorpc.v1alpha.submit.AnyChainTxPattern
	10, // 8: utxorpc.v1alpha.submit.TxPredicate.not:type_name -> utxorpc.v1alpha.submit.TxPredicate
	10, // 9: utxorpc.v1alpha.submit.TxPredicate.all_of:type_name -> utxorpc.v1alpha.submit.TxPredicate
	10, // 10: utxorpc.v1alpha.submit.TxPredicate.any_of:type_name -> utxorpc.v1alpha.submit.TxPredicate
	10, // 11: utxorpc.v1alpha.submit.WatchMempoolRequest.predicate:type_name -> utxorpc.v1alpha.submit.TxPredicate
	14, // 12: utxorpc.v1alpha.submit.WatchMempoolRequest.field_mask:type_name -> google.protobuf.FieldMask
	4,  // 13: utxorpc.v1alpha.submit.WatchMempoolResponse.tx:type_name -> utxorpc.v1alpha.submit.TxInMempool
	2,  // 14: utxorpc.v1alpha.submit.SubmitService.SubmitTx:input_type -> utxorpc.v1alpha.submit.SubmitTxRequest
	7,  // 15: utxorpc.v1alpha.submit.SubmitService.WaitForTx:input_type -> utxorpc.v1alpha.submit.WaitForTxRequest
	5,  // 16: utxorpc.v1alpha.submit.SubmitService.ReadMempool:input_type -> utxorpc.v1alpha.submit.ReadMempoolRequest
	11, // 17: utxorpc.v1alpha.submit.SubmitService.WatchMempool:input_type -> utxorpc.v1alpha.submit.WatchMempoolRequest
	3,  // 18: utxorpc.v1alpha.submit.SubmitService.SubmitTx:output_type -> utxorpc.v1alpha.submit.SubmitTxResponse
	8,  // 19: utxorpc.v1alpha.submit.SubmitService.WaitForTx:output_type -> utxorpc.v1alpha.submit.WaitForTxResponse
	6,  // 20: utxorpc.v1alpha.submit.SubmitService.ReadMempool:output_type -> utxorpc.v1alpha.submit.ReadMempoolResponse
	12, // 21: utxorpc.v1alpha.submit.SubmitService.WatchMempool:output_type -> utxorpc.v1alpha.submit.WatchMempoolResponse
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_utxorpc_v1alpha_submit_submit_proto_init() }
func file_utxorpc_v1alpha_submit_submit_proto_init() {
	if File_utxorpc_v1alpha_submit_submit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyChainTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxInMempool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMempoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMempoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyChainTxPattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxPredicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchMempoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_v1alpha_submit_submit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchMempoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_utxorpc_v1alpha_submit_submit_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AnyChainTx_Raw)(nil),
	}
	file_utxorpc_v1alpha_submit_submit_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*AnyChainTxPattern_Cardano)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_utxorpc_v1alpha_submit_submit_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_utxorpc_v1alpha_submit_submit_proto_goTypes,
		DependencyIndexes: file_utxorpc_v1alpha_submit_submit_proto_depIdxs,
		EnumInfos:         file_utxorpc_v1alpha_submit_submit_proto_enumTypes,
		MessageInfos:      file_utxorpc_v1alpha_submit_submit_proto_msgTypes,
	}.Build()
	File_utxorpc_v1alpha_submit_submit_proto = out.File
	file_utxorpc_v1alpha_submit_submit_proto_rawDesc = nil
	file_utxorpc_v1alpha_submit_submit_proto_goTypes = nil
	file_utxorpc_v1alpha_submit_submit_proto_depIdxs = nil
}
